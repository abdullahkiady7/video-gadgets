#!/bin/bash

# 
# Manages FFMPEG Encoding profiles
#

# MIT License
# 
# Copyright (c) 2022 Dimitri Tarassenko
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# include our common headers
source "$(dirname "$0")/_video-gadgets-common.sh"

# Show help and quit with errorlevel 1
help_and_bail() {
cat << EOF
usage: vgp [options] <profileName>[.<type>]

Outputs the encoding profiles suitable for use in FFMPEG.

Parameters:

    profileName:    one of the profile names, run 
                    vgp -l to list all

    type:           profile type, available types are:

                    a:   audio encoding
                    v:   video encoding
                    e:   a+v
                    f:   filters
                    o:   output
                    all: f+v+a+o (default)

Options:

    -l
    --list
            list all profiles

Examples:

    vgp --list
    ffmpeg -i myfile.mpeg `vgp twitch.e` -f flv rtpm://twitch.com/me
    ffmpeg -i myfile.mpeg `vgp play`

Additional profiles

    vgp will also try to source profiles from:

    - /etc/vg_profile.conf
    - ./vg_profile.conf
    - ./*.vg_profile.conf
    - ~/.vg_profile.conf

EOF
exit 1
} 

if [ "$#" -lt 1 ]; then
    help_and_bail
fi

# Parse the command line params
while [ ${1:0:1} == "-" ]
do
    case $1 in
        -l|--list)
            echo " "
            echo "Available encoding profiles:"
            echo "-----------------------------------------------------------------"
            vg_list_profiles --names
            echo " "
            exit 0;
            ;;
        *)
            help_and_bail
            ;;
    esac
done

while [ "$1" != "" ]
do
    # Parse into main name and suffix
    PROFILE="`echo $1 | cut -d . -f 1`"
    [ "${vg_profile[$PROFILE]}" == "" ] && vg_abort "encoding profile '$PROFILE' does not exist."
    SUFFFIX="`echo $1 | cut -d . -f 2`"
    # ^^ note if no suffix is supplied $SUFFIX will == $PROFILE!

    case $SUFFFIX in

        ""|all|"$PROFILE")
            echo -n "${vg_profile[$PROFILE.f]} ${vg_profile[$PROFILE.v]} ${vg_profile[$PROFILE.a]} ${vg_profile[$PROFILE.o]} "
            ;;
        
        e)
            echo -n "${vg_profile[$PROFILE.v]} ${vg_profile[$PROFILE.a]} "
            ;;

        a|v|f|o)
            echo -n "${vg_profile[$1]} "
            ;;

    esac
    shift
done
echo
